[{"C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\index.js":"1","C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\App.js":"2","C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\reportWebVitals.js":"3","C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\components\\Canvas.js":"4","C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\components\\MindmapNode.js":"5","C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\components\\MindmapEdge.js":"6"},{"size":517,"mtime":1612774977240,"results":"7","hashOfConfig":"8"},{"size":189,"mtime":1612879869399,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1612774977241,"results":"10","hashOfConfig":"8"},{"size":8722,"mtime":1613031511128,"results":"11","hashOfConfig":"8"},{"size":2882,"mtime":1612989355664,"results":"12","hashOfConfig":"8"},{"size":396,"mtime":1612903537362,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ou5j8u",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\index.js",[],["28","29"],"C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\App.js",[],"C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\reportWebVitals.js",[],"C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\components\\Canvas.js",["30","31","32","33","34","35","36","37","38","39","40","41"],"C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\components\\MindmapNode.js",["42","43","44","45","46","47","48"],"import { render } from '@testing-library/react';\r\nimport React, { Component, createRef, ReactDOM, useRef, useState } from 'react'\r\nimport Draggable from 'react-draggable';\r\n\r\nconst MindmapNode = (props) => {\r\n\r\n    const [dim, setDim] = useState({\r\n        x: props.node.x,\r\n        y: props.node.y\r\n    })\r\n    //console.log(\"actual coords: \", dim.x, dim.y)\r\n\r\n    let img = null;\r\n\r\n    if(props.node.img) {\r\n        img =  <img src={props.node.img}/>\r\n    }\r\n\r\n    return (\r\n        <Draggable cancel=\"h2\" \r\n            /* onDrag={(e) => console.log(e.target.getBoundingClientRect())}  */\r\n            onDrag={props.dragStopped}\r\n        >\r\n            <foreignObject \r\n                x={dim.x} y={dim.y}\r\n                /* x={props.node.x} y={props.node.y} */\r\n                width={props.node.nodeWidth + props.node.strokeWidth*2} // Default width plus room for border \r\n                height={props.node.nodeHeight + props.node.strokeWidth*2} // Default height plus room for border \r\n            >\r\n                <div onMouseEnter={props.mouseEnter} onMouseLeave={props.mouseLeave}>\r\n                    <button \r\n                        style={{\r\n                            backgroundColor: props.node.strokeColor,\r\n                            border: \"none\",\r\n                            color: \"white\",\r\n                            visibility: props.node.buttonVisible\r\n                        }} \r\n                        className=\"createNodeBtn\" \r\n                        onClick={props.plusBtnClicked}>+</button>\r\n            \r\n                    <div\r\n                        onClick={props.handleSelected}\r\n                        className=\"mindMapNode\"\r\n                        style={props.node.isSelected ? {\r\n                            boxShadow: \"0 0 5px blue\",\r\n                            backgroundColor: props.node.fill,\r\n                            borderColor: props.node.strokeColor,\r\n                        } : {\r\n                                backgroundColor: props.node.fill,\r\n                                borderStyle: \"solid\",\r\n                                borderColor: props.node.strokeColor,\r\n                                borderWidth: props.node.strokeWidth\r\n                            }\r\n                        }\r\n                    >\r\n                        <h2 \r\n                            onClick={e => console.log(\"get text value\")} \r\n                            style={{fontSize: props.node.fontsize}}\r\n                            contentEditable=\"true\"\r\n                            suppressContentEditableWarning={true}\r\n                        >\r\n                                {props.node.title}\r\n                        </h2>\r\n                        {img}\r\n                    </div>\r\n                </div>\r\n            </foreignObject>\r\n        </Draggable>\r\n        \r\n    )\r\n}\r\n\r\nexport default MindmapNode;","C:\\Users\\Magnus\\GIT\\ReactProsjekt\\Creaza\\thomas-svg-test\\mindmapdraggable\\src\\components\\MindmapEdge.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":21},{"ruleId":"53","severity":1,"message":"57","line":2,"column":28,"nodeType":"55","messageId":"56","endLine":2,"endColumn":37},{"ruleId":"53","severity":1,"message":"58","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":18},{"ruleId":"53","severity":1,"message":"59","line":59,"column":15,"nodeType":"55","messageId":"56","endLine":59,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":128,"column":59,"nodeType":"62","messageId":"63","endLine":128,"endColumn":61},{"ruleId":"60","severity":1,"message":"61","line":183,"column":50,"nodeType":"62","messageId":"63","endLine":183,"endColumn":52},{"ruleId":"64","severity":1,"message":"65","line":187,"column":17,"nodeType":"66","endLine":187,"endColumn":44},{"ruleId":"64","severity":1,"message":"65","line":188,"column":17,"nodeType":"66","endLine":188,"endColumn":44},{"ruleId":"60","severity":1,"message":"61","line":200,"column":59,"nodeType":"62","messageId":"63","endLine":200,"endColumn":61},{"ruleId":"60","severity":1,"message":"61","line":210,"column":59,"nodeType":"62","messageId":"63","endLine":210,"endColumn":61},{"ruleId":"60","severity":1,"message":"61","line":217,"column":59,"nodeType":"62","messageId":"63","endLine":217,"endColumn":61},{"ruleId":"67","severity":1,"message":"68","line":235,"column":13,"nodeType":"69","endLine":235,"endColumn":80},{"ruleId":"53","severity":1,"message":"70","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":16},{"ruleId":"53","severity":1,"message":"71","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":2,"column":28,"nodeType":"55","messageId":"56","endLine":2,"endColumn":37},{"ruleId":"53","severity":1,"message":"72","line":2,"column":39,"nodeType":"55","messageId":"56","endLine":2,"endColumn":47},{"ruleId":"53","severity":1,"message":"73","line":2,"column":49,"nodeType":"55","messageId":"56","endLine":2,"endColumn":55},{"ruleId":"53","severity":1,"message":"74","line":7,"column":17,"nodeType":"55","messageId":"56","endLine":7,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":16,"column":16,"nodeType":"69","endLine":16,"endColumn":43},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'getByTestId' is defined but never used.","Identifier","unusedVar","'createRef' is defined but never used.","'useState' is defined but never used.","'randomColor' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'useRef' is defined but never used.","'setDim' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]