[{"C:\\code\\testing\\mindmapdraggable\\src\\index.js":"1","C:\\code\\testing\\mindmapdraggable\\src\\reportWebVitals.js":"2","C:\\code\\testing\\mindmapdraggable\\src\\App.js":"3","C:\\code\\testing\\mindmapdraggable\\src\\components\\Canvas.js":"4","C:\\code\\testing\\mindmapdraggable\\src\\components\\MindmapNode.js":"5","C:\\code\\testing\\mindmapdraggable\\src\\components\\MindmapEdge.js":"6","C:\\code\\testing\\mindmapdraggable\\src\\components\\ZoomableWrapper.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":216,"mtime":1612967483072,"results":"11","hashOfConfig":"9"},{"size":7452,"mtime":1612967740885,"results":"12","hashOfConfig":"9"},{"size":2623,"mtime":1612967736003,"results":"13","hashOfConfig":"9"},{"size":396,"mtime":1612965599956,"results":"14","hashOfConfig":"9"},{"size":986,"mtime":1612967483073,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ziauh3",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\code\\testing\\mindmapdraggable\\src\\index.js",[],"C:\\code\\testing\\mindmapdraggable\\src\\reportWebVitals.js",[],"C:\\code\\testing\\mindmapdraggable\\src\\App.js",[],"C:\\code\\testing\\mindmapdraggable\\src\\components\\Canvas.js",["32","33","34","35","36","37","38","39","40","41"],"C:\\code\\testing\\mindmapdraggable\\src\\components\\MindmapNode.js",["42","43","44","45","46"],"import { render } from '@testing-library/react';\r\nimport React, { Component, createRef, ReactDOM, useRef, useState } from 'react'\r\nimport Draggable from 'react-draggable';\r\n\r\nconst MindmapNode = (props) => {\r\n\r\n    const [dim, setDim] = useState({\r\n        x: props.node.x,\r\n        y: props.node.y\r\n    })\r\n    console.log(\"actual coords: \", dim.x, dim.y)\r\n\r\n    return (\r\n        <Draggable cancel=\"h2\" \r\n            onDrag={(e) => console.log(e.target.getBoundingClientRect())} \r\n            onStop={props.dragStopped}\r\n        >\r\n            <foreignObject \r\n                x={dim.x} y={dim.y}\r\n                width={props.node.nodeWidth + props.node.strokeWidth*2} // Default width plus room for border \r\n                height={props.node.nodeHeight + props.node.strokeWidth*2} // Default height plus room for border \r\n            >\r\n                <div onMouseEnter={props.mouseEnter} onMouseLeave={props.mouseLeave}>\r\n                    <button \r\n                        style={{\r\n                            backgroundColor: props.node.strokeColor,\r\n                            border: \"none\",\r\n                            color: \"white\",\r\n                            visibility: props.node.buttonVisible\r\n                        }} \r\n                        className=\"createNodeBtn\" \r\n                        onClick={props.plusBtnClicked}>+</button>\r\n            \r\n                    <div\r\n                        onClick={props.handleSelected}\r\n                        className=\"mindMapNode\"\r\n                        style={props.node.isSelected ? {\r\n                            boxShadow: \"0 0 5px blue\",\r\n                            backgroundColor: props.node.fill,\r\n                            borderColor: props.node.strokeColor,\r\n                        } : {\r\n                                backgroundColor: props.node.fill,\r\n                                borderStyle: \"solid\",\r\n                                borderColor: props.node.strokeColor,\r\n                                borderWidth: props.node.strokeWidth\r\n                            }\r\n                        }\r\n                    >\r\n                        <h2 \r\n                            onClick={e => console.log(\"get text value\")} \r\n                            contentEditable=\"true\"\r\n                            suppressContentEditableWarning={true}\r\n                        >\r\n                                {props.node.title}\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </foreignObject>\r\n        </Draggable>\r\n        \r\n    )\r\n}\r\n\r\nexport default MindmapNode;",["47","48"],"C:\\code\\testing\\mindmapdraggable\\src\\components\\MindmapEdge.js",[],"C:\\code\\testing\\mindmapdraggable\\src\\components\\ZoomableWrapper.js",[],{"ruleId":"49","severity":1,"message":"50","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":21},{"ruleId":"49","severity":1,"message":"53","line":2,"column":28,"nodeType":"51","messageId":"52","endLine":2,"endColumn":37},{"ruleId":"49","severity":1,"message":"54","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":97,"column":59,"nodeType":"57","messageId":"58","endLine":97,"endColumn":61},{"ruleId":"55","severity":1,"message":"56","line":149,"column":50,"nodeType":"57","messageId":"58","endLine":149,"endColumn":52},{"ruleId":"59","severity":1,"message":"60","line":152,"column":17,"nodeType":"61","endLine":152,"endColumn":44},{"ruleId":"59","severity":1,"message":"60","line":153,"column":17,"nodeType":"61","endLine":153,"endColumn":44},{"ruleId":"55","severity":1,"message":"56","line":164,"column":59,"nodeType":"57","messageId":"58","endLine":164,"endColumn":61},{"ruleId":"55","severity":1,"message":"56","line":174,"column":59,"nodeType":"57","messageId":"58","endLine":174,"endColumn":61},{"ruleId":"55","severity":1,"message":"56","line":181,"column":59,"nodeType":"57","messageId":"58","endLine":181,"endColumn":61},{"ruleId":"49","severity":1,"message":"62","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":16},{"ruleId":"49","severity":1,"message":"63","line":2,"column":17,"nodeType":"51","messageId":"52","endLine":2,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":2,"column":28,"nodeType":"51","messageId":"52","endLine":2,"endColumn":37},{"ruleId":"49","severity":1,"message":"64","line":2,"column":39,"nodeType":"51","messageId":"52","endLine":2,"endColumn":47},{"ruleId":"49","severity":1,"message":"65","line":2,"column":49,"nodeType":"51","messageId":"52","endLine":2,"endColumn":55},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},"no-unused-vars","'getByTestId' is defined but never used.","Identifier","unusedVar","'createRef' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'render' is defined but never used.","'Component' is defined but never used.","'ReactDOM' is defined but never used.","'useRef' is defined but never used.","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-global-assign","no-unsafe-negation"]